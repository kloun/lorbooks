<HTML
><HEAD
><TITLE
>Разнообразные темы.</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.76b+
"><LINK
REL="HOME"
TITLE="The Linux Bootdisk HOWTO"
HREF="t1.htm"><LINK
REL="PREVIOUS"
TITLE="Поиск неисправностей, или Агония Поражения"
HREF="x844.htm"><LINK
REL="NEXT"
TITLE="Как это делают профессионалы"
HREF="x1061.htm"></HEAD
><BODY
CLASS="SECT1"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>The Linux Bootdisk HOWTO</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="x844.htm"
ACCESSKEY="P"
>&#1055;&#1088;&#1077;&#1076;.</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
></TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="x1061.htm"
ACCESSKEY="N"
>&#1057;&#1083;&#1077;&#1076;.</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="SECT1"
><H1
CLASS="SECT1"
><A
NAME="AEN946">Разнообразные темы.</H1
><DIV
CLASS="SECT2"
><H2
CLASS="SECT2"
><A
NAME="SLIMFAST">Уменьшение размера корневой файловой системы</H2
><P
>Иногда корневая файловая система слишком велика и не пригодна для дискеты даже
после сжатия. Вот способы уменьшения размера файловой системы, перечисленные в
порядке уменьшения эффективности:

<P
></P
><OL
TYPE="1"
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Увеличьте плотность диска</I
></SPAN
>.  
По умолчанию, дискеты форматируются на 1440Кб, но доступны форматы и с более 
высокой плотностью. <TT
CLASS="FILENAME"
>fdformat</TT
> форматирует диски 
следующих размеров: 1600, 1680, 1722, 1743, 1760, 1840, и 1920. Большинство 
приводов 1440Кб поддерживает 1722Кб, и я всегда это использую для 
загрузочных дисков. См. man страницу <B
CLASS="COMMAND"
>fdformat</B
> и 
<TT
CLASS="FILENAME"
>/usr/src/linux/Documentation/devices.txt</TT
>.</P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Замените вашу оболочку</I
></SPAN
>. Некоторые из популярных оболочек 
Linux, такие как <B
CLASS="COMMAND"
>bash</B
> и <B
CLASS="COMMAND"
>tcsh</B
>, 
велики, и требуют многих библиотек. Существуют легкие альтернативы, такие как 
<B
CLASS="COMMAND"
>ash</B
>, <B
CLASS="COMMAND"
>lsh</B
>, <B
CLASS="COMMAND"
>kiss</B
> и
<B
CLASS="COMMAND"
>smash</B
>, которые намного меньше и требуют немногих библиотек 
или вообще их не требуют. Большинство этих оболочек доступно из <A
HREF="http://metalab.unc.edu/pub/Linux/system/shells/"
TARGET="_top"
><TT
CLASS="FILENAME"
>http://metalab.unc.edu/pub/Linux/system/shells/</TT
></A
>. Убедитесь, что используемая Вами оболочка способна выполнять команды всех <TT
CLASS="FILENAME"
>rc</TT
> файлов, которые Вы включаете в 
загрузочный диск.&#13;</P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Усечение библиотек и исполняемых файлов</I
></SPAN
>.  
Многие библиотеки и исполняемые файлы поставляются с отладочной информацией. В 
этом случае запуск <B
CLASS="COMMAND"
>file</B
> на этих файлах сообщит Вам 
``<TT
CLASS="LITERAL"
>not stripped</TT
>''. 

При копировании исполняемых файлов в вашу корневую файловую систему, хорошо 
использовать:
<PRE
CLASS="SCREEN"
>      objcopy --strip-all FROM TO</PRE
>





<DIV
CLASS="IMPORTANT"
><BLOCKQUOTE
CLASS="IMPORTANT"
><P
><B
>&#1042;&#1072;&#1078;&#1085;&#1086;: </B
>При копировании библиотек, убедитесь, что используете 
<TT
CLASS="OPTION"
>strip-debug</TT
>, а не <TT
CLASS="OPTION"
>strip-all</TT
>.</P
></BLOCKQUOTE
></DIV
></P
></LI
><LI
><P
>Если Вы переместили или удалили много файлов при создании корневой файловой 
системы, создайте ее заново. Смотрите ЗАМЕТКУ ВЫШЕ о важности не оставлять 
грязных блоков на файловой системе.</P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Переместите некритичные файлы в сервисный диск</I
></SPAN
>.

Если без некоторых исполняемых файлов можно обойтись при загрузке или входе в 
систему, Вы можете переместить их в сервисный диск. Для подробностей см. 
секцию <A
HREF="x946.htm#UTILITYDISK"
>&#1056;&#1072;&#1079;&#1076;. <I
>Создание сервисного диска.</I
></A
>. Вы можете также обдумать перемещение 
модулей на сервисный диск.
&#13;</P
></LI
></OL
></P
></DIV
><DIV
CLASS="SECT2"
><H2
CLASS="SECT2"
><A
NAME="NONRAMDISKROOT">Не - ramdisk корневые файловые системы.</H2
><P
>Секция <A
HREF="x193.htm"
>&#1056;&#1072;&#1079;&#1076;. <I
>Создание корневой файловой системы.</I
></A
> содержит инструкции создания сжатой корневой 
файловой системы, которая при запуске системы загружается в ramdisk. Этот 
метод имеет много преимуществ, поэтому он обычно используется. Однако, 
некоторые системы с небольшим объемом памяти не могут предоставить необходимую 
оперативную память; в этом случаев корневая файловая система должна 
монтироваться непосредственно на дискете.</P
><P
>Такие файловые системы проще создать, чем сжатые корневые файловые 
системы, так как они могут быть сформированы на дискете, а не на некотором другом 
устройстве, и они не должны быть сжаты. Мы набросаем структуру процедуры их 
создания, т.к. она отличается от вышеприведенных инструкций. Если Вы выбираете 
этот вариант, имейте в виду - у Вас будет <SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>намного меньше доступного 
пространства</I
></SPAN
>.</P
><P
>&#13;<P
></P
><OL
TYPE="1"
><LI
><P
>Вычислите, сколько у Вас будет пространства для корневых файлов.

Если Вы формируете одиночный загрузочный диск, Вы должны разместить все блоки 
ядра плюс все блоки корневой файловой системы на одном диске.&#13;</P
></LI
><LI
><P
>Используя <B
CLASS="COMMAND"
>mke2fs</B
>, создайте соответствующего размера корневую 
файловую систему на дискете.&#13;</P
></LI
><LI
><P
>Заполните файловую систему как описано выше.&#13;</P
></LI
><LI
><P
>Когда закончите, размонтируйте файловую систему и переместите ее в 
файл на диске, но <SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>не сжимайте ее</I
></SPAN
>.&#13;</P
></LI
><LI
><P
>Переместите ядро на дискету, как описано выше. При вычислении ramdisk 
слова, <SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>установите бит 14 в ноль</I
></SPAN
>, для указания не 
загружать корневую файловую систему в ramdisk. Выполните 
<B
CLASS="COMMAND"
>rdev</B
> как описано.

&#13;</P
></LI
><LI
><P
>Переместите корневую файловую систему, как и прежде.&#13;</P
></LI
></OL
>&#13;</P
><P
>Можно немного сократить работу. Если Вы формируете 
двухдисковый набор, Вы можете создать полную корневую файловую систему прямо 
на втором диске, и Вам не надо перемещать ее в файл жесткого диска, а затем 
обратно. Также, если Вы создаете одиночный загрузочный диск и используете 
LILO, Вы можете создать <SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>одну</I
></SPAN
> файловую систему весь диск, 
содержащую ядро, LILO файлы и корневые файлы, и на последнем шаге просто 
выполнить LILO.</P
></DIV
><DIV
CLASS="SECT2"
><H2
CLASS="SECT2"
><A
NAME="UTILITYDISK">Создание сервисного диска.</H2
><P
>Создание сервисного диска относительно просто - на форматированном диске 
создайте файловую систему и скопируйте на него файлы. Для использования его с 
загрузочным диском, после загрузки системы примонтируйте его вручную.</P
><P
>В командах выше, мы упомянули, что сервисный диск может быть примонтирован в
<TT
CLASS="FILENAME"
>/usr</TT
>. В этом случае, исполняемые файлы могут быть 
помещены в каталог <TT
CLASS="FILENAME"
>/bin</TT
> сервисного диска, т.о. для 
доступа к ним поместите <TT
CLASS="FILENAME"
>/usr/bin</TT
> в список путей PATH. 
Дополнительные библиотеки необходимые исполняемым файлам, помещаются в 
<TT
CLASS="FILENAME"
>/lib</TT
> на сервисном диске.</P
><P
>Есть несколько важных моментов, которые нужно иметь в виду при проектировании
сервисного диска:</P
><P
>&#13;<P
></P
><OL
TYPE="1"
><LI
><P
>Не помещайте критичные исполняемые файлы системы или библиотеки на сервисный 
диск, так как он не будет примонтирован, пока система не загрузится.&#13;</P
></LI
><LI
><P
>Вы не сможете получить доступ к дисководу или floppy-ленточному устройству 
одновременно. Это означает, что вы не сможете получить доступ к Вашему ленточному устройству, пока сервисный диск примонтирован.&#13;</P
></LI
><LI
><P
>Доступ к файлам на сервисном диске будет медленный.&#13;</P
></LI
></OL
>&#13;</P
><P
><A
HREF="a1491.htm"
>&#1055;&#1088;&#1080;&#1083;. D</A
> приводит пример содержимого сервисного 
диска. Вот несколько полезный идей о необходимых файлах: программы  
проверки и управления дисками (<B
CLASS="COMMAND"
>format, fdisk</B
>) и файловых 
систем (<B
CLASS="COMMAND"
>mke2fs, fsck, debugfs, isofs.o</B
>), легкий текстовый 
редактор (<B
CLASS="COMMAND"
>elvis, jove</B
>), утилиты сжатия и архивации 
(<B
CLASS="COMMAND"
>gzip, bzip, tar, cpio, afio</B
>), ленточные утилиты 
(<B
CLASS="COMMAND"
>mt, ftmt, tob, taper</B
>), коммуникационные утилиты 
(<B
CLASS="COMMAND"
>ppp.o, slip.o, minicom</B
>) и утилиты устройств 
(<B
CLASS="COMMAND"
>setserial, mknod</B
>).</P
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="x844.htm"
ACCESSKEY="P"
>&#1055;&#1088;&#1077;&#1076;.</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="t1.htm"
ACCESSKEY="H"
>&#1053;&#1072;&#1095;&#1072;&#1083;&#1086;</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="x1061.htm"
ACCESSKEY="N"
>&#1057;&#1083;&#1077;&#1076;.</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Поиск неисправностей, или Агония Поражения</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Как это делают профессионалы</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>